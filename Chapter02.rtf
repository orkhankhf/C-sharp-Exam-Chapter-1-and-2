{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033\deflangfe1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Arial;}{\f1\fmodern\fprq1\fcharset0 Courier New;}{\f2\fswiss\fprq2\fcharset238 Arial;}{\f3\fswiss\fprq2\fcharset162 Arial;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue0;}
{\*\generator Riched20 10.0.16299}{\*\mmathPr\mnaryLim0\mdispDef1\mwrapIndent1440 }\viewkind4\uc1 
\pard\brdrt\brdrs\brdrw10\brsp20 \keepn\nowidctlpar\sb480\sa360\b\f0\fs52 Sample Test Questions from Chapter 3\par

\pard\widctlpar\fi720\li720\sa120\b0\fs26 Read each question carefully and select the answer or answers that represent the best solution to the problem. You can find the answers at the end of this section.\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 1.\tab What is the maximum value you can store in an \f1 int\f0  data type?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab Positive infinity\par
b.\tab 32,167\par
c.\tab 65,536\par
\cf1 d.\cf0\tab 4,294,967,296\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 2.\tab True or false: \f1 Double\f0  and \f1 float\f0  data types can store values with decimals.\par
\tab\tab Cavab\f2\lang1068\u305?\f3 m: \cf1\f0\lang1033 True\cf0\par
\par
\par
3.\tab Which declaration can assign the default value to an \f1 int\f0  type?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab\f1 new int();\f0\par
\cf1 b.\cf0\tab\f1 int myInt = new int();\f0\par
c.\tab\f1 int myInt;\f0\par
d.\tab\f1 int myInt = new int(default);\f0\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 4.\tab True or false: structs can contain methods.\par
\f3\lang1068\tab\tab Cavab\f2\u305?\f3 m: \cf1\f0\lang1033 True\par
\cf0\par
5.\tab What is the correct way to access the \f1 firstName\f0  property of a struct named \f1 Student\f0 ?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120\cf1 a.\cf0\tab\f1 string name = Student.firstName;\f0\par
b.\tab\f1 string name = Student.firstName();\f0\par
c.\tab\f1 string name = Student(firstName);\f0\par
d.\tab\f1 string name = Student.(firstName);\f0\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 6.\tab In the following enumeration, what will be the underlying value of Wed?\par

\pard\widctlpar\li720\f1\fs18 enum Days \{Mon = 1, Tue, Wed, Thur, Fri, Sat, Sun\};\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120\fs26 a.\tab 2\par
b.\tab 3\par
c.\tab 4\par
\cf1 d.\cf0\tab It has no numeric value.\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120\page 7.\tab What are two methods with the same name but with different parameters?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120\cf1 a.\cf0\tab Overloading\par
b.\tab Overriding\par
c.\tab Duplexing\par
d.\tab Duplicate\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 8.\tab What is the parameter in this method known as?\par

\pard\widctlpar\li720\fs18 public void displayAbsoluteValue(int value = 1)\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120\fs26 a.\tab Modified\par
\cf1 b.\cf0\tab Optional\par
c.\tab Named\par
\cf2 d.\cf0\tab Default\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 9.\tab When you create an abstract method, how do you use that method in a derived class?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab You must overload the method in your derived class.\par
b.\tab You must override the method in your derived class.\par
c.\tab Abstract methods cannot be used in derived classes.\par
d.\tab You need to declare the method as virtual in your derived class.\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 10.\tab How do you enforce encapsulation on the data members of your class?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab Create private data members.\par
b.\tab Create private methods.\par
\cf1 c.\cf0\tab Use public properties.\par
d.\tab Use private properties.\par
e.\tab Use the protected access modifier on methods, properties, and member variables.\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 11.\tab Boxing refers to:\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab Encapsulation\par
\cf1 b.\cf0\tab Converting a value type to a reference type\par
c.\tab Converting a reference type to a value type\par
d.\tab Creating a class to wrap functionality in a single entity\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 12.\tab What is one advantage of using named parameters?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120\cf1 a.\cf0\tab You can pass the arguments in to the method in any order using the parameter names.\par
b.\tab You can pass in optional arguments as long as you use the parameter names in your arguments.\par
c.\tab Named parameters make compiling much faster.\par
d.\tab Name parameters do not affect compile time.\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120\page 13.\tab What is an advantage of using generics in .NET?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab Generics enable you to create classes that span types.\par
\cf1 b.\cf0\tab Generics enable you to create classes that accept the type at creation time.\par
c.\tab Generics perform better than nongeneric classes.\par
d.\tab Generics do not use optional parameters.\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 14.\tab What does the <T> designator indicate in a generic class?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab It is the parameter for all arguments passed in to the class constructor.\par
b.\tab It is the parameter designator for the default method of the class.\par
\cf1 c.\cf0\tab It is a placeholder that will contain the object type used.\par
d.\tab It is a placeholder that will serve as the class name.\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 15.\tab How are the values passed in generic methods?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab They are passed by value.\par
\cf1 b.\cf0\tab They are passed by reference.\par
c.\tab They must be encapsulated in a property.\par
d.\tab They are passed during class instantiation.\par

\pard\brdrt\brdrs\brdrw10\brsp20 \keepn\nowidctlpar\sb480\sa360\b\f0\fs52 Additional Sample Test Questions for Chapter 3\par

\pard\widctlpar\fi720\li720\sa120\b0\fs26 The following questions are similar to the types of questions you will find on Exam 70-483. Read each question carefully and select the answer or answers that represent the best solution to the problem. You can find the answers at the end of this document.\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 1.\tab You want to create a type in your code that stores multiple values of differing types but don\rquote t need the full facilities of a class file. What is the value type that can serve your needs?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab Array\par
b.\tab Struct\par
c.\tab Queue\par
\cf1 d.\cf0\tab Linked List\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 2.\tab You can change the increment of Enumerations. True or false?\par
\tab\tab Cavab\f2\lang1068\u305?\f3 m\f0\lang1033 : \cf1 False\par
\cf0\par
3.\tab Overloading a method can be accomplished by changing only the order of the parameters. True or false?\par
\tab\tab Cavab\f2\lang1068\u305?\f3 m\f0\lang1033 : \cf1 True\par
\cf0\par
4.\tab Optional parameters in a method must exist where in the parameter list?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120 a.\tab At the beginning\par
b.\tab At the end\par
c.\tab After any default parameters\par
\cf1 d.\cf0\tab Anywhere\par

\pard\nowidctlpar\fi-360\li1800\sb120\sa120 5.\tab What modifier is used on the properties of a class?\par

\pard\nowidctlpar\fi-360\li2520\sb120\sa120\cf1 a.\cf0\tab Private\par
b.\tab Static\par
c.\tab Public\par
d.\tab Property\par
}
